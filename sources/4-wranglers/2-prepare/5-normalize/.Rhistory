knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE)
options(scipen=999)  # turn-off scientific notation like 1e+48
# Clear environment and memory
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memory and report the memory usage.
library(tidyverse)
library(dplyr)
library(kableExtra)
library(knitcitations)
library(bibtex)
library(showtext)
## Loading Google fonts (https://fonts.google.com/)
font_add_google("Inconsolata", "inconsolata")
# turn on showtext
showtext_auto()
df <- read_csv('./archetypes/Cheapestelectriccars-EVDatabase.csv')
df
View(df)
df <- read_csv('./archetypes/Cheapestelectriccars-EVDatabase.csv')
df
df <- read_csv('./archetypes/Cheapestelectriccars-EVDatabase.csv', header = TRUE, stringsAsFactors = FALSE)
df <- read.csv('./archetypes/Cheapestelectriccars-EVDatabase.csv', header = TRUE, stringsAsFactors = FALSE)
df
View(df)
str(df)
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE)
options(scipen=999)  # turn-off scientific notation like 1e+48
# Clear environment and memory
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memory and report the memory usage.
library(tidyverse)
library(dplyr)
library(kableExtra)
library(knitcitations)
library(bibtex)
library(showtext)
## Loading Google fonts (https://fonts.google.com/)
font_add_google("Inconsolata", "inconsolata")
# turn on showtext
showtext_auto()
masthead <- "assets/chuttersnap-xfaYAsMV1p8-unsplash.jpg"
knitr::include_graphics(masthead, dpi=72)
df <- read.csv('./archetypes/Cheapestelectriccars-EVDatabase.csv', header = TRUE, stringsAsFactors = FALSE)
df
as.numeric(df$PriceinUK)
gsub("[^0-9.-]", "", df$Acceleration)
colnames(df) <- c("Name", "Usable_Battery(kWh)", "Acceleration(sec)", "TopSpeed(km/h)", "Range(km)", "Efficiency(Wh/km)", "FastChargeSpeed(km/h)", "Drive", "NumberOfSeats", "PriceInGermany(EUR)", "PriceInUK(GBP)")
df$Usable_Battery(kWh) <- as.numeric(gsub("[^0-9.-]", "", df$Usable_Battery(kWh)))
gsub("[^0-9.-]", "", df$Usable_Battery(kWh)
gsub("[^0-9.-]", "", df$Usable_Battery(kWh))
gsub("[^0-9.-]", "", df$Usable_Battery(kWh))
View(df)
gsub("[^0-9.-]", "", df$`Usable_Battery(kWh)`)
df$`Usable_Battery(kWh)` <- as.numeric(gsub("[^0-9.-]", "", df$`Usable_Battery(kWh)`))
View(df)
colnames(df) <- c("Name", "Usable_Battery(kWh)", "Acceleration(sec)", "TopSpeed(km/h)", "Range(km)", "Efficiency(Wh/km)", "FastChargeSpeed(km/h)", "Drive", "NumberOfSeats", "PriceInGermany(EUR)", "PriceInUK(GBP)")
df$`Usable_Battery(kWh)` <- as.numeric(gsub("[^0-9.-]", "", df$`Usable_Battery(kWh)`))
df$`Acceleration(sec)` <- as.numeric(gsub("[^0-9.-]", "", df$`Acceleration(sec)`))
df$`TopSpeed(km/h)` <- as.numeric(gsub("[^0-9.-]", "", df$`TopSpeed(km/h)`))
df$`Range(km)` <- as.numeric(gsub("[^0-9.-]", "", df$`Range(km)`))
df$`Efficiency(Wh/km)` <- as.numeric(gsub("[^0-9.-]", "", df$`Efficiency(Wh/km)`))
df$`FastChargeSpeed(km/h)` <- as.numeric(gsub("[^0-9.-]", "", df$`FastChargeSpeed(km/h)`))
df$`PriceInGermany(EUR)` <- as.numeric(gsub("[^0-9.-]", "", df$`PriceInGermany(EUR)`))
df$`PriceInUK(GBP)` <- as.numeric(gsub("[^0-9.-]", "", df$`PriceInUK(GBP)`))
is.na(df$`PriceInGermany(EUR)`)
df[is.na(df$`PriceInGermany(EUR)`)]
df[is.na(df$`PriceInGermany(EUR)`),df$`PriceInGermany(EUR)` ]
df[is.na(df$`PriceInGermany(EUR)`,df$`PriceInGermany(EUR)`)]
df$`PriceInGermany(EUR)`[is.na(df$`PriceInGermany(EUR)`)]
df$`PriceInGermany(EUR)`[is.na(df$`PriceInGermany(EUR)`)]
df[1,3]
df[df$`PriceInGermany(EUR)`[is.na(df$`PriceInGermany(EUR)`)],11]
df[df$`PriceInGermany(EUR)`[is.na(df$`PriceInGermany(EUR)`)],11]
df[is.na(df[,10])]
df[is.na(df[,10]), 11]
df[rowSums(is.na(df[,10:11]))!=2,]
df[is.na(df[,10]), 11]
df <- df[rowSums(is.na(df[,10:11]))!=2,] #weed out the rows with missing values in both EUR and GBP
df[is.na(df[,10]), 11]
df[is.na(df[,10]), 10] <- df[is.na(df[,10]), 11]*1.18
df[is.na(df[,11]), 11] <- df[is.na(df[,11]), 10]*0.85 #Impute missing values in EUR from conversion of GBP
summary(df[2:6])
summary(df[2:50])
summary(df[2:5])
library(tidyverse)
library(reshape2)
library(knitr)
library(kableExtra)
library(magick)
df<-read.csv('./archetypes/gap_life_expectancy_other_other_param_2010.csv')
df_tmp <-df[1:10,]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")
df_tmp
summary(df[3:6])
View(df)
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE)
options(scipen=999)  # turn-off scientific notation like 1e+48
# Clear environment and memory
rm(list = ls(all.names = TRUE)) #will clear all objects includes hidden objects.
gc() #free up memory and report the memory usage.
library(tidyverse)
library(dplyr)
library(kableExtra)
library(knitcitations)
library(bibtex)
library(showtext)
## Loading Google fonts (https://fonts.google.com/)
font_add_google("Inconsolata", "inconsolata")
# turn on showtext
showtext_auto()
masthead <- "assets/chuttersnap-xfaYAsMV1p8-unsplash.jpg"
knitr::include_graphics(masthead, dpi=72)
df <- read.csv('./archetypes/Cheapestelectriccars-EVDatabase.csv', header = TRUE, stringsAsFactors = FALSE)
df
str(df)
colnames(df) <- c("Name", "Usable_Battery(kWh)", "Acceleration(sec)", "TopSpeed(km/h)", "Range(km)", "Efficiency(Wh/km)", "FastChargeSpeed(km/h)", "Drive", "NumberOfSeats", "PriceInGermany(EUR)", "PriceInUK(GBP)")
df$`Usable_Battery(kWh)` <- as.numeric(gsub("[^0-9.-]", "", df$`Usable_Battery(kWh)`))
df$`Acceleration(sec)` <- as.numeric(gsub("[^0-9.-]", "", df$`Acceleration(sec)`))
df$`TopSpeed(km/h)` <- as.numeric(gsub("[^0-9.-]", "", df$`TopSpeed(km/h)`))
df$`Range(km)` <- as.numeric(gsub("[^0-9.-]", "", df$`Range(km)`))
df$`Efficiency(Wh/km)` <- as.numeric(gsub("[^0-9.-]", "", df$`Efficiency(Wh/km)`))
df$`FastChargeSpeed(km/h)` <- as.numeric(gsub("[^0-9.-]", "", df$`FastChargeSpeed(km/h)`))
df$`PriceInGermany(EUR)` <- as.numeric(gsub("[^0-9.-]", "", df$`PriceInGermany(EUR)`))
df$`PriceInUK(GBP)` <- as.numeric(gsub("[^0-9.-]", "", df$`PriceInUK(GBP)`))
df <- df[rowSums(is.na(df[,10:11]))!=2,] #weed out the rows with missing values in both EUR and GBP
df[is.na(df[,10]), 10] <- df[is.na(df[,10]), 11]*1.18 #Impute missing values in EUR from conversion of GBP
df[is.na(df[,11]), 11] <- df[is.na(df[,11]), 10]*0.85 #Impute missing values in EUR from conversion of GBP
dat.m <- melt(df,id.vars='Name', measure.vars=c('Usable_Battery(kWh)','Acceleration(sec)','TopSpeed(km/h)','Range(km)'))
v1 <- ggplot(dat.m) +
geom_boxplot(aes(y=value, color=variable)) +
theme_bw() +
theme(
panel.border = element_blank(),
legend.position = 'top',
axis.text.x=element_blank()
)
p
v1
dat.m <- melt(df,id.vars='Name', measure.vars=c('Usable_Battery(kWh)','Acceleration(sec)','TopSpeed(km/h)','Range(km)'))
v1 <- ggplot(dat.m) +
geom_boxplot(aes(y=value, color=variable)) +
theme_bw() +
theme(
panel.border = element_blank(),
legend.position = 'top',
axis.text.x=element_blank()
)
girafe(ggobj = v1, width_svg = 1280/72, height_svg = 720/72, options =
list(opts_sizing(rescale = TRUE, width = 1.0)))
library(ggiraph)
dat.m <- melt(df,id.vars='Name', measure.vars=c('Usable_Battery(kWh)','Acceleration(sec)','TopSpeed(km/h)','Range(km)'))
v1 <- ggplot(dat.m) +
geom_boxplot(aes(y=value, color=variable)) +
theme_bw() +
theme(
panel.border = element_blank(),
legend.position = 'top',
axis.text.x=element_blank()
)
girafe(ggobj = v1, width_svg = 1280/72, height_svg = 720/72, options =
list(opts_sizing(rescale = TRUE, width = 1.0)))
summary(df[C(2,3,4,11)])
summary(df[2,3,4,11])
summary(df[c(2:4,10)])
dat.m <- melt(df,id.vars='Name', measure.vars=c('Usable_Battery(kWh)','Acceleration(sec)','TopSpeed(km/h)','PriceInGermany(EUR)'))
v1 <- ggplot(dat.m) +
geom_boxplot(aes(y=value, color=variable)) +
theme_bw() +
theme(
panel.border = element_blank(),
legend.position = 'top',
axis.text.x=element_blank()
)
girafe(ggobj = v1, width_svg = 1280/72, height_svg = 720/72, options =
list(opts_sizing(rescale = TRUE, width = 1.0)))
df_1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector),
vars = c('Usable_Battery(kWh)','Acceleration(sec)','TopSpeed(km/h)','PriceInGermany(EUR)'))
df_1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector),
vars = c('Usable_Battery(kWh)','Acceleration(sec)','TopSpeed(km/h)','PriceInGermany(EUR)'))
df_1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector),
vars = c(`Usable_Battery(kWh)`,'Acceleration(sec)','TopSpeed(km/h)','PriceInGermany(EUR)'))
df_1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector),
vars = c(`Usable_Battery(kWh)`,`Acceleration(sec)`,`TopSpeed(km/h)`,`PriceInGermany(EUR)`))
df_1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector),
vars = c(df$`Usable_Battery(kWh)`,`Acceleration(sec)`,`TopSpeed(km/h)`,`PriceInGermany(EUR)`))
df_1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector),
vars = c(df$`Usable_Battery(kWh)`,df$`Acceleration(sec)`,df$`TopSpeed(km/h)`,df$`PriceInGermany(EUR)`))
df_1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(`Usable_Battery(kWh)`,`Acceleration(sec)`,`TopSpeed(km/h)`,`PriceInGermany(EUR)`)
df_1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(`Usable_Battery(kWh)`,`Acceleration(sec)`,`TopSpeed(km/h)`,`PriceInGermany(EUR)`))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(`Usable_Battery(kWh)`,`Acceleration(sec)`,`TopSpeed(km/h)`,`PriceInGermany(EUR)`))
colnames(df) <- c("Name", "Usable_Battery_kWh", "Acceleration_sec", "TopSpeed_km/h", "Range_km", "Efficiency_Wh/km", "FastChargeSpeed_km/h", "Drive", "NumberOfSeats", "PriceInGermany_EUR", "PriceInUK_GBP")
df$`Usable_Battery_kWh` <- as.numeric(gsub("[^0-9.-]", "", df$`Usable_Battery_kWh`))
df$`Acceleration_sec` <- as.numeric(gsub("[^0-9.-]", "", df$`Acceleration_sec`))
df$`TopSpeed_km/h` <- as.numeric(gsub("[^0-9.-]", "", df$`TopSpeed_km/h`))
df$`Range_km` <- as.numeric(gsub("[^0-9.-]", "", df$`Range_km`))
df$`Efficiency_Wh/km` <- as.numeric(gsub("[^0-9.-]", "", df$`Efficiency_Wh/km`))
df$`FastChargeSpeed_km/h` <- as.numeric(gsub("[^0-9.-]", "", df$`FastChargeSpeed_km/h`))
df$`PriceInGermany_EUR` <- as.numeric(gsub("[^0-9.-]", "", df$`PriceInGermany_EUR`))
df$`PriceInUK_GBP` <- as.numeric(gsub("[^0-9.-]", "", df$`PriceInUK_GBP`))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c(Usable_Battery_kWh, Acceleration_sec, `TopSpeed_km/h`, PriceInGermany_EUR))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c('Usable_Battery_kWh', 'Acceleration_sec', 'TopSpeed_km/h', 'PriceInGermany_EUR'))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c('Usable_Battery_kWh', 'Acceleration_sec', 'PriceInGermany_EUR'))
colnames(df) <- c("Name", "Usable_Battery_kWh", "Acceleration_sec", "TopSpeed_kmh", "Range_km", "Efficiency_Whkm", "FastChargeSpeed_kmh", "Drive", "NumberOfSeats", "PriceInGermany_EUR", "PriceInUK_GBP")
df$`Usable_Battery_kWh` <- as.numeric(gsub("[^0-9.-]", "", df$`Usable_Battery_kWh`))
df$`Acceleration_sec` <- as.numeric(gsub("[^0-9.-]", "", df$`Acceleration_sec`))
df$`TopSpeed_kmh` <- as.numeric(gsub("[^0-9.-]", "", df$`TopSpeed_kmh`))
df$`Range_km` <- as.numeric(gsub("[^0-9.-]", "", df$`Range_km`))
df$`Efficiency_Whkm` <- as.numeric(gsub("[^0-9.-]", "", df$`Efficiency_Whkm`))
df$`FastChargeSpeed_kmh` <- as.numeric(gsub("[^0-9.-]", "", df$`FastChargeSpeed_kmh`))
df$`PriceInGermany_EUR` <- as.numeric(gsub("[^0-9.-]", "", df$`PriceInGermany_EUR`))
df$`PriceInUK_GBP` <- as.numeric(gsub("[^0-9.-]", "", df$`PriceInUK_GBP`))
df1 <- df %>% mutate_each_(list(~scale(.) %>% as.vector), vars = c('Usable_Battery_kWh','Acceleration_sec','TopSpeed_kmh','PriceInGermany_EUR'))
df_tmp <-df_1[c(2:4,10),]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(3:6, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp <-df1[c(2:4,10),]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(3:6, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
df_tmp <-df1[c(2:4,10),]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(2:4, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
df_tmp <-df1[c(2:4),]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(2:4, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
df_tmp <-df1[c(2:4,10),]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(3:6, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
df_tmp <-df1[c(2:4,10),]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(3:5, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
df_tmp <-df1[c(2:4),]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(3:5, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
df_tmp <-df1[1:7,]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(c(3:5,10), bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp <-df1[1:7,]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(c(3:5,10), bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
df_tmp <-df1[1:7,]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(c(2:4,10), bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
summary(df1[c(2:4,10)])
apply(df1, 2, sd)
dat.m <- melt(df1,id.vars='Name', measure.vars=c('Usable_Battery_kWh','Acceleration_sec','TopSpeed_kmh','PriceInGermany_EUR'))
v2 <- ggplot(dat.m) +
geom_boxplot(aes(y=value, color=variable)) +
theme_bw() +
theme(
panel.border = element_blank(),
legend.position = 'top',
axis.text.x=element_blank()
)
girafe(ggobj = v2, width_svg = 1280/72, height_svg = 720/72, options =
list(opts_sizing(rescale = TRUE, width = 1.0)))
df_2 <- bind_cols(df[,1:2],as.data.frame(apply(df[, c(2:4, 10)], 2, function(x) (x - min(x))/(max(x)-min(x)))))
df_2$name <- df$name
View(df_2)
df_2 <- bind_cols(df[,1],as.data.frame(apply(df[, c(2:4, 10)], 2, function(x) (x - min(x))/(max(x)-min(x)))))
df_2$name <- df$name
View(df_2)
df_2 <- bind_cols(df[,1],as.data.frame(apply(df[, c(2:4, 10)], 2, function(x) (x - min(x))/(max(x)-min(x)))))
df_2$name <- df$name
View(df_2)
df_2 <- bind_cols(df[,1:2],as.data.frame(apply(df[, c(2:4, 10)], 2, function(x) (x - min(x))/(max(x)-min(x)))))
df_2$name <- df$name
View(df_2)
df_2 <- bind_cols(df[,1],as.data.frame(apply(df[, c(2:4, 10)], 2, function(x) (x - min(x))/(max(x)-min(x)))))
df_2$name <- df$name
View(df_2)
df_2 <- bind_cols(df[,1],as.data.frame(apply(df[, c(2:4, 10)], 2, function(x) (x - min(x))/(max(x)-min(x)))))
View(df_2)
colnames(df[,1]) <- "Name"
df[,1]
df[1]
colnames(df_2[1]) <- "Name"
View(df_2)
colnames(df_2[1]) <- "Name"
View(df_2)
colnames(df_2[1])
colnames(df_2[1]) <- c("Name")
View(df_2)
colnames(df_2[1]) <- c(Name)
colnames(df_2[1])
colnames(df_2)[1] <- "Name"
View(df_2)
df_tmp <-df_2[1:10,]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(3:6, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp <-df_2[1:10,]%>%
kable(escape = FALSE)%>%
kable_styling(position = "center", full_width = FALSE, bootstrap_options = "striped")%>%
column_spec(2:5, bold = TRUE, color = "#000000", background = "#CEE3F6")
df_tmp
dat.m <- melt(df_2,id.vars='country', measure.vars=c('Fertility','GDP_per_capita','Healthcare_spending','BMI'))
dat.m <- melt(df_2,id.vars='Name', measure.vars=c('Usable_Battery_kWh','Acceleration_sec','TopSpeed_kmh','PriceInGermany_EUR'))
v3 <- ggplot(dat.m) +
geom_boxplot(aes(y=value, color=variable)) +
theme_bw() +
theme(
panel.border = element_blank(),
legend.position = 'top',
axis.text.x=element_blank()
)
girafe(ggobj = v3, width_svg = 1280/72, height_svg = 720/72, options =
list(opts_sizing(rescale = TRUE, width = 1.0)))
summary(df_2[2:5])
